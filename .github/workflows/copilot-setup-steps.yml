name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

permissions:
  contents: read

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies,
      # you'll need the `contents: read` permission. If you don't clone the repository in your setup steps,
      # Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:

      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          # we need full history with tags for the version number
          fetch-depth: '0'

      # work around for https://github.com/orgs/community/discussions/163397
      - name: Fetch main branch
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin main:main


      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.13
          cache-dependency-path: |
            pyproject.toml
            requirements.txt

      - name: upgrade pip setuptools wheel
        run: python -m pip install --upgrade pip setuptools wheel
        shell: bash

      - name: install qcodes editable
        run: |
          pip install -e .[test] -c requirements.txt
          echo "PYTEST_OPT=" >> $GITHUB_ENV

      - name: install pre-commit
        run: |
          pip install pre-commit

      - name: Get Pyright Version
        id: pyright-version
        run: |
          PYRIGHT_VERSION=$(jq -r '.devDependencies.pyright' < package.json)
          echo $PYRIGHT_VERSION
          echo "version=$PYRIGHT_VERSION" >> $GITHUB_OUTPUT
        working-directory: .github
        shell: bash

      - name: install pyright
        run: |
          pip install pyright==${{ steps.pyright-version.outputs.version }}
