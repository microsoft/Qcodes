name: build docs

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - 'v*'
  pull_request:
  merge_group:
    branches: ['main']

permissions:
  contents: read

jobs:
  builddocs:
    runs-on: ${{ matrix.os }}
    strategy:
      # don't stop other jobs if one fails
      # this is often due to network issues
      # and or flaky tests
      # and the time lost in such cases
      # is bigger than the gain from canceling the job
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
        exclude:
          - os: windows-latest
            python-version: 3.11
          - os: windows-latest
            python-version: 3.13
    env:
      OS: ${{ matrix.os }}
      SPHINX_WARNINGS_AS_ERROR: true
      SPHINX_OPTS: "-v -j 2"
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        # we need full history with tags for the version number
        fetch-depth: '0'
    - name: set-sphinx-opts
      run: |
        echo "SPHINX_OPTS=-W -v --keep-going -j 2" >> $GITHUB_ENV
      if: ${{ fromJSON(env.SPHINX_WARNINGS_AS_ERROR) }}
    - name: install pandoc linux
    # add the || true logic to not error in case the index cannot be fetched.
    # this is known to have happened before e.g.
    # https://github.com/microsoft/linux-package-repositories/issues/130
      run: |
        sudo apt update || true
        sudo apt install pandoc
      if: runner.os == 'Linux'
    - name: Install pandoc on windows
      uses: Wandalen/wretry.action@e68c23e6309f2871ca8ae4763e7629b9c258e1ea # v3.8.0
      with:
        action: crazy-max/ghaction-chocolatey@v1.6.0
        with: |
          args: install pandoc
        attempt_limit: 5
        attempt_delay: 1000
      if: runner.os == 'Windows'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml
          requirements.txt
          docs/conf.py
    - name: upgrade pip setuptools wheel
      run: python -m pip install --upgrade pip setuptools wheel
      shell: bash
    - name: install qcodes
      run: pip install -c requirements.txt .[docs]
    - name: Build docs on linux
      run: |
        cd docs
        export SPHINXOPTS="${{ env.SPHINX_OPTS }}"
        make html
      if: runner.os == 'Linux'
    - name: Build docs on windows
      run: |
        cd docs
        $env:SPHINXOPTS = "${{ env.SPHINX_OPTS }}"
        ./make.bat html
      if: runner.os == 'Windows'
    - name: Upload build docs
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: docs_${{ matrix.python-version }}_${{ matrix.os }}
        path: ${{ github.workspace }}/docs/_build/html


  deploydocs:
    needs: builddocs
    runs-on: "ubuntu-latest"
    permissions:
      contents: write  # we need to be allowed to push to gh-pages
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:

    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Download artifact
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: docs_3.11_ubuntu-latest
        path: build_docs

    - name: Deploy to gh pages
      uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4.7.3
      with:
        branch: gh-pages
        folder: ${{ github.workspace }}/build_docs/
        clean: true
        single-commit: true
        git-config-email: "bot"
        git-config-name: "Documentation Bot"
