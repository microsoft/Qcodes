name: Run pytest with minimum requirements

on:
  push:
    branches:
      - 'master'
      - 'release/*'
      - 'staging'
      - 'trying'
    tags:
      - 'v*'
  pull_request:

jobs:
  pytestmin:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7]
    env:
      DISPLAY: ':99.0'
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v3.0.0
      with:
        submodules: true
    - name: setup ubuntu-latest xvfb
      uses: ./.github/actions/setup-ubuntu-latest-xvfb
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: prepare pip cache
      id: prepare-cache-pip
      uses: ./.github/actions/prepare-cache-pip
    - name: pip cache
      uses: actions/cache@v3.0.1
      with:
        path: ${{ steps.prepare-cache-pip.outputs.cache-dir }}
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/min-requirements.txt') }}-${{ hashFiles('**/setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-
    - name: generate min_requirements.txt
      run: |
        pip install requirements-builder
        pip install versioningit
        requirements-builder -l min -e test setup.py -o min_requirements.txt
    - name: install min_requirements.txt
      run: |
        pip install -r min_requirements.txt
    - name: install qcodes
      run: |
        pip install .
    - name: Run tests
      run: |
        pytest --hypothesis-profile ci qcodes
